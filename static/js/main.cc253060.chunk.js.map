{"version":3,"sources":["redux/store.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/Header/Header.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","components/App/App.js","index.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","service/contacts-api.js","redux/auth/auth-operations.js","components/UserMenu/UserMenu.module.css","components/Header/Header.module.css","components/AuthNav/AuthNav.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js"],"names":["authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","UserMenu","dispatch","useDispatch","email","useSelector","authSelectors","getUserEmail","className","s","userMenu","text","mail","type","button","onClick","authOperations","logOut","AuthNav","to","Header","isLoggedIn","getIsLoggedIn","wrapper","Box","sx","flexGrow","AppBar","position","Toolbar","nav","exact","link","activeClassName","PrivateRoute","children","redirectedTo","props","PublicRoute","restricted","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","isGetCurrentUser","getIsGetCurrentUser","useEffect","getCurrentUser","fallback","path","render","loading","document","getElementById","state","user","getToken","token","authSlice","createSlice","name","initialState","extraReducers","register","fulfilled","payload","logIn","pending","_","rejected","axios","defaults","baseURL","headers","common","Authorization","phoneBookApi","getContacts","get","then","data","addContact","contact","post","deleteContact","id","delete","editContact","number","patch","registerNewUser","credentials","a","loginUser","persistToken","logOutUser","createAsyncThunk","console","log","thunkAPI","getState","rejectWithValue","module","exports","message","contactsOperations","result","getItems","items","getFilter","filter","contactsSelectors","getVisibleItems","createSelector","item","toLowerCase","includes","changeFilter","createAction","createReducer","map","combineReducers"],"mappings":"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","file":"static/js/main.cc253060.chunk.js","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n  REHYDRATE,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { authOperations, authSelectors } from 'redux/auth';\r\nimport s from './UserMenu.module.css';\r\n\r\nconst UserMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(authSelectors.getUserEmail);\r\n\r\n  return (\r\n    <div className={s.userMenu}>\r\n      <p className={s.text}>Welcome,</p>\r\n      <p className={s.mail}>{email}</p>\r\n      <button\r\n        type=\"button\"\r\n        className={s.button}\r\n        onClick={() => dispatch(authOperations.logOut())}\r\n      >\r\n        Exit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => (\r\n  <>\r\n    <NavLink to=\"/login\" className={s.button}>\r\n      LogIn\r\n    </NavLink>\r\n    <NavLink to=\"/register\" className={s.button}>\r\n      SignUp\r\n    </NavLink>\r\n  </>\r\n);\r\n\r\nexport default AuthNav;\r\n","import { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport UserMenu from 'components/UserMenu';\r\nimport AuthNav from 'components/AuthNav';\r\n\r\nimport { authSelectors } from 'redux/auth';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <nav className={s.nav}>\r\n              <NavLink\r\n                to=\"/\"\r\n                exact\r\n                className={s.link}\r\n                activeClassName=\"activeLink\"\r\n              >\r\n                Home\r\n              </NavLink>\r\n\r\n              {isLoggedIn && (\r\n                <NavLink\r\n                  to=\"/contacts\"\r\n                  exact\r\n                  className={s.link}\r\n                  activeClassName=\"activeLink\"\r\n                >\r\n                  Contacts\r\n                </NavLink>\r\n              )}\r\n            </nav>\r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nconst PrivateRoute = ({ children, redirectedTo = './', ...props }) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...props}>\r\n      {isLoggedIn ? children : <Redirect to={redirectedTo} />}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  children,\r\n  restricted = false,\r\n  redirectedTo = './',\r\n  ...props\r\n}) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...props}>\r\n      {isLoggedIn && restricted ? <Redirect to={redirectedTo} /> : children}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import ReactNotification from 'react-notifications-component';\nimport { useEffect, Suspense, lazy } from 'react';\nimport 'react-notifications-component/dist/theme.css';\nimport { Switch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authOperations, authSelectors } from 'redux/auth';\nimport Header from 'components/Header';\nimport PrivateRoute from 'components/PrivateRoute';\nimport PublicRoute from 'components/PublicRoute';\n\nconst HomePage = lazy(() => import('../../pages/HomePage'));\nconst RegisterPage = lazy(() => import('../../pages/RegisterPage'));\nconst LoginPage = lazy(() => import('../../pages/LoginPage'));\nconst ContactsPage = lazy(() => import('../../pages/ContactsPage'));\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isGetCurrentUser = useSelector(authSelectors.getIsGetCurrentUser);\n\n  useEffect(() => dispatch(authOperations.getCurrentUser()), [dispatch]);\n\n  return (\n    <>\n      {!isGetCurrentUser && (\n        <>\n          <ReactNotification />\n          <Header />\n          <Switch>\n            <Suspense fallback={<p>Load...</p>}>\n              <PublicRoute exact path=\"/\">\n                <HomePage />\n              </PublicRoute>\n\n              <PublicRoute\n                exact\n                path=\"/register\"\n                redirectedTo=\"/contacts\"\n                restricted\n              >\n                <RegisterPage />\n              </PublicRoute>\n\n              <PublicRoute path=\"/login\" redirectedTo=\"/contacts\" restricted>\n                <LoginPage />\n              </PublicRoute>\n\n              <PrivateRoute path=\"/contacts\" redirectedTo=\"/login\">\n                <ContactsPage />\n              </PrivateRoute>\n            </Suspense>\n          </Switch>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport { persistor, store } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nrender(\n  <StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nconst getToken = state => state.auth.token;\r\n\r\nconst getIsGetCurrentUser = state => state.auth.isGetCurrentUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUserEmail,\r\n  getToken,\r\n  getIsGetCurrentUser,\r\n};\r\n\r\nexport default authSelectors;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isGetCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, { payload }) {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n\r\n    [authOperations.logIn.fulfilled](state, { payload }) {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.getCurrentUser.pending](state, _) {\r\n      state.isGetCurrentUser = true;\r\n    },\r\n\r\n    [authOperations.getCurrentUser.fulfilled](state, { payload }) {\r\n      state.user.name = payload.name;\r\n      state.user.email = payload.email;\r\n      state.isLoggedIn = true;\r\n      state.isGetCurrentUser = false;\r\n    },\r\n\r\n    [authOperations.getCurrentUser.rejected](state, _) {\r\n      state.isGetCurrentUser = false;\r\n    },\r\n\r\n    [authOperations.logOut.fulfilled](state, _) {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset(token) {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst getContacts = () => {\r\n  return axios.get('/contacts').then(({ data }) => data);\r\n};\r\n\r\nconst addContact = contact => {\r\n  return axios.post('/contacts', contact).then(({ data }) => data);\r\n};\r\n\r\nconst deleteContact = id => {\r\n  return axios.delete(`/contacts/${id}`);\r\n};\r\n\r\nconst editContact = ({ id, name, number }) => {\r\n  return axios\r\n    .patch(`/contacts/${id}`, { name, number })\r\n    .then(({ data }) => data);\r\n};\r\n\r\nconst registerNewUser = async credentials => {\r\n  return axios.post('/users/signup', credentials).then(({ data }) => {\r\n    token.set(data.token);\r\n    return data;\r\n  });\r\n};\r\n\r\nconst loginUser = credentials => {\r\n  return axios.post('/users/login', credentials).then(({ data }) => {\r\n    token.set(data.token);\r\n    return data;\r\n  });\r\n};\r\n\r\nconst getCurrentUser = persistToken => {\r\n  token.set(persistToken);\r\n  return axios.get('/users/current').then(({ data }) => {\r\n    return data;\r\n  });\r\n};\r\n\r\nconst logOutUser = () => {\r\n  axios.post('/users/logout');\r\n  token.unset();\r\n};\r\n\r\nconst phoneBookApi = {\r\n  getContacts,\r\n  addContact,\r\n  deleteContact,\r\n  editContact,\r\n  registerNewUser,\r\n  loginUser,\r\n  getCurrentUser,\r\n  logOutUser,\r\n};\r\nexport default phoneBookApi;\r\n","import phoneBookApi from 'service/contacts-api';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    return await phoneBookApi.registerNewUser(credentials);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    return await phoneBookApi.loginUser(credentials);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\nconst getCurrentUser = createAsyncThunk(\r\n  'auth/getCurrentUser',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const state = thunkAPI.getState();\r\n      const token = state.auth.token;\r\n      if (!token) {\r\n        return thunkAPI.rejectWithValue();\r\n      }\r\n      return await phoneBookApi.getCurrentUser(token);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    return await phoneBookApi.logOutUser();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\nconst authOperations = { register, logIn, getCurrentUser, logOut };\r\n\r\nexport default authOperations;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"UserMenu_userMenu__2ANOc\",\"avatar\":\"UserMenu_avatar__1qR7b\",\"text\":\"UserMenu_text__kPd-o\",\"mail\":\"UserMenu_mail__1CsW2\",\"button\":\"UserMenu_button__1jIPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__1xkX-\",\"link\":\"Header_link__EzEdV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"AuthNav_button__2IKbx\"};","import phoneBookApi from 'service/contacts-api';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await phoneBookApi.getContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const result = await phoneBookApi.addContact(contact);\r\n      return result;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await phoneBookApi.deleteContact(id);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst editContact = createAsyncThunk(\r\n  'contacts/editContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const result = await phoneBookApi.editContact(contact);\r\n      return result;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst contactsOperations = {\r\n  addContact,\r\n  deleteContact,\r\n  getContacts,\r\n  editContact,\r\n};\r\n\r\nexport default contactsOperations;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getItems = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleItems = createSelector(\r\n  [getItems, getFilter],\r\n  (items, filter) => {\r\n    return items.filter(\r\n      item =>\r\n        item.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n        item.number.includes(filter),\r\n    );\r\n  },\r\n);\r\n\r\nconst contactsSelectors = { getItems, getFilter, getVisibleItems };\r\n\r\nexport default contactsSelectors;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport contactsOperations from './contacts-operations';\r\nimport { changeFilter } from './contacts-actions';\r\n\r\nconst { getContacts, addContact, deleteContact, editContact } =\r\n  contactsOperations;\r\n\r\nconst items = createReducer([], {\r\n  [getContacts.fulfilled]: (_, { payload }) => payload,\r\n\r\n  [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\r\n\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n\r\n  [editContact.fulfilled]: (state, { payload }) => {\r\n    return [...state].map(contact => {\r\n      if (contact.id === payload.id) {\r\n        return payload;\r\n      }\r\n      return contact;\r\n    });\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n"],"sourceRoot":""}